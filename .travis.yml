language: python
env:
  global:
    - PYTEST_SETTINGS="not requires_gpu and not memory_intense and not slow and not travis_slow"
    - MODIFIES_PLUGIN="false"
    - PLUGIN_ONLY="false"
install:
  - python -m pip install -e ".[test]"
  # install conda for plugin runner
  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - pip list
  # install singularity for container models
  - conda install -yc conda-forge singularity
before_script:
  - git fetch --depth=50 origin refs/heads/main:refs/heads/main
script:
  # if ONLY plugin files changed, ONLY run tests for those plugins; otherwise, run full test suite
  - CHANGED_FILES=$( echo $(git diff --name-only main $TRAVIS_PULL_REQUEST_SHA -C $TRAVIS_BUILD_DIR) | tr '\n' ' ' )
  - |
    if [ "$TRAVIS_PULL_REQUEST" = "true" ]; then 
      TESTING_NEEDED=$( python -c "from brainscore_core.plugin_management.parse_plugin_changes import testing_needed; testing_needed(\"${CHANGED_FILES}\", 'brainscore_language')" ) &&
      MODIFIES_PLUGIN=$( echo $TESTING_NEEDED | head -n 1 ) && echo $MODIFIES_PLUGIN &&
      PLUGIN_ONLY=$( echo $TESTING_NEEDED | tail -n 1 ) && echo $PLUGIN_ONLY;  
    fi
  - if [ "$MODIFIES_PLUGIN" = "False" ]; then python -c "from brainscore_core.plugin_management.parse_plugin_changes import run_changed_plugin_tests; run_changed_plugin_tests(\"${CHANGED_FILES}\", 'brainscore_language')"; fi # TESTING ONLY
  - if [ "$MODIFIES_PLUGIN" = "True" ]; then python -c "from brainscore_core.plugin_management.parse_plugin_changes import run_changed_plugin_tests; run_changed_plugin_tests(\"${CHANGED_FILES}\", 'brainscore_language')"; fi
  - if [ "$PRIVATE_ACCESS" = 1 ] && [ -n "${GITHUB_TOKEN}" ] && [ "$PLUGIN_ONLY" = "False" ]; then pytest -m "private_access and $PYTEST_SETTINGS"; fi
  - if [ "$PRIVATE_ACCESS" != 1 ] && [ "$PLUGIN_ONLY" = "False" ]; then pytest -m "not private_access and $PYTEST_SETTINGS" --ignore "tests/test_submission"; fi
after_failure:
  - bash ${TRAVIS_BUILD_DIR}/.github/workflows/travis_trigger.sh $GH_WORKFLOW_TRIGGER $TRAVIS_PULL_REQUEST_SHA failure
    
jobs:
  include:
    - name: 3.8 public
      python: '3.8'
    - name: 3.8 private
      python: '3.8'
      env: PRIVATE_ACCESS=1
    - name: 3.9 public
      python: '3.9'
    - name: 3.9 private
      python: '3.9'
      env: PRIVATE_ACCESS=1
    - stage: "Automerge check"
      install: skip
      if: type = pull_request
      script: bash ${TRAVIS_BUILD_DIR}/.github/workflows/travis_trigger.sh $GH_WORKFLOW_TRIGGER $TRAVIS_PULL_REQUEST_SHA success
